govtype_bivar.levels <- c("non-democracy", "democracy")
polity_data$govtype_bivar <- as.factor(polity_data$govtype_bivar, levels=govtype_bivar.levels)
polity_data$govtype_bivar <- as.factor(polity_data$govtype_bivar)
levels(polity_data$govtype_bivar)
polity_data$govtype_bivar <- as.factor(polity_data$govtype_bivar, levels=c("non-democracy", "democracy"))
levels(polity_data$govtype_bivar) <- c("non-democracy", "democracy")
levels(polity_data$govtype_bivar)
head(polity_data)
model1 <- glm(govtype_bivar ~ xropen + xrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model2 <-glmrob(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
install.packages("robustbase")
library(robustbase)
model2 <-glmrob(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
summary(model2)
install.packages("lme4")
require(lme4)
plot(model1)
anova(model1,model2)
anova(model1, model2, test="F")
model2 <- glm(govtype_bivar ~ xropen + exrec + parcomp , family=binomial(link=probit), data = polity_data)
anova(model1, model2, test="F")
anova(model1, model2)
model2 <- update(model1, ~ . + polcomp)
anova(model1, model2)
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg + polcomp, family=binomial(link=probit), data = polity_data)
model2 <- update(model1, ~ . - polcomp)
anova(model1, model2)
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model2 <- update(model1, ~ . + durable)
anova(model1, model2)
polity_data.complete<- polity_data[complete.cases]
polity_data.complete<- polity_data[complete.cases,]
polity_data.complete<- polity_data[,complete.cases]
polity_data.complete<- polity_data[complete.cases(),]
polity_data.complete<- polity_data[complete.cases(polity_data),]
summary(polity_data)
polity_data <- select(polity_data, -(prior:regtrans))
polity_data.complete<- polity_data[complete.cases(polity_data),]
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model2 <- update(model1, ~ . + durable)
model2 <-glmrob(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
anova(model1, model2)
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data.complete)
plot(model1)
model2 <- update(model1, ~ . + durable)
anova(model1, model2)
model2 <-glmrob(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data.complete)
polity_data.complete <- select(polity_data, govtype_bivar, xropen, exrec, parcomp,parreg,durable)
polity_data.complete<- polity_data[complete.cases(polity_data),]
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model2 <- update(model1, ~ . + durable)
anova(model1, model2)
polity_data.complete <- select(polity_data, govtype_bivar, xropen, exrec, parcomp,parreg,durable)
polity_data.complete<- polity_data[complete.cases(polity_data.complete),]
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data)
model2 <- update(model1, ~ . + durable)
anova(model1, model2)
polity_data.complete <- select(polity_data, govtype_bivar, xropen, exrec, parcomp,parreg,durable)
polity_data.complete<- polity_data[complete.cases(polity_data.complete),]
model1 <- glm(govtype_bivar ~ xropen + exrec + parcomp + parreg, family=binomial(link=probit), data = polity_data.complete)
model2 <- update(model1, ~ . + durable)
anova(model1, model2)
model3 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (1|scode), data=polity_data)
plot(model3)
summary(model3)
model3 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (scode), data=polity_data)
model3 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (year), data=polity_data)
model3 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (1|year), data=polity_data)
plot(model3)
summary(model3)
attributes(model3)
list(model3)
names(model3)
attr(model3)
attr(model3)
attributes(model3)
names(attributes(model3))
?predict
?fit
predict(polity_data.complete)
predict(model1)
fitted(model1)
fitted(model1) - predict(model1)
names(attributes(model3))
model1$fitted.values
resid <- model1$residuals
fitted <- model1$fitted.values
plot(resid,fitted)
plot(resid,fitval)
resid <- model1$residuals
fitval<- model1$fitted.values
plot(resid,fitval)
plot(model1)
hist(resid)
hist(fitval)
hist(polity_data$govtype_bivar)
plot(model2)
hist(fitval)
fitval<- model2$fitted.values
hist(fitval)
model3 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (1|year), data=polity_data)
plot(model3)
model3 <- lm(polity2 ~ xropen + exrec + parcomp + parreg , data=polity_data)
plot(model3)
model4 <- lm(polity2 ~ xropen + exrec + parcomp + parreg + (1|year), data=polity_data)
anova(model3, model4, test="F")
model4 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (1|year), data=polity_data)
anova(model3, model4, test="F")
summary(model4)
model4 <- lmer(polity2 ~ xropen + exrec + parcomp + parreg + (scode|year), data=polity_data)
summary(resid)
resid <- residuals(model1, type="pearson")
summary(resid)
hist(resid)
resid <- residuals(model1, type="deviance")
hist(resid)
resid <- residuals(model1, type="response")
hist(resid)
plot(resid, fitval)
install.packages("ggplot2")
library(ggplot2)
data(tips, package = 'reshape2')
head(tips)
dim(tips)
tips <- tbl_df(tips)
qplot(total_bill, tip, data = tips, geom = "point")
g <- ggplot(tips, aes(x=total_bill, y=tip)) + geom_point()
g
g +geom_line()
g +geom_fit()
g +geom_smooth()
?geom_smooth
g +geom_smooth(n=10, level=.95)
g +geom_smooth(n=10, level=.95)
?geom_smooth
g +geom_smooth(n=10, level=.95, na.rm=TRUE)
g + geom+smooth()
g +geom_smooth(n=50, level=.95, na.rm=TRUE)
g +geom_smooth(n=50, level=.90, na.rm=TRUE)
g +geom_smooth(n=50, level=.80, na.rm=TRUE)
?geom_smooth
g +geom_smooth(n=50, level=.80, na.rm=TRUE)
g +geom_smooth(n=50, level=.50, na.rm=TRUE)
g +geom_smooth(n=50, level=.05, na.rm=TRUE)
g +geom_smooth(n=50, level=.99, na.rm=TRUE)
g +geom_smooth(n=100, level=.99, na.rm=TRUE)
g +geom_smooth(n=10, level=.99, na.rm=TRUE)
g +geom_smooth(n=1, level=.99, na.rm=TRUE)
g +geom_smooth(n=2, level=.99, na.rm=TRUE)
g +geom_smooth(n=3, level=.99, na.rm=TRUE)
g +geom_smooth(n=4, level=.99, na.rm=TRUE)
g +geom_smooth(n=5, level=.99, na.rm=TRUE)
g +geom_smooth(n=6, level=.99, na.rm=TRUE)
?geom_smooth
g +geom_smooth(span=1, level=.99, na.rm=TRUE)
g +geom_smooth(span=10, level=.99, na.rm=TRUE)
g +geom_smooth(span=1, level=.99, na.rm=TRUE)
g +geom_smooth(span=.05, level=.99, na.rm=TRUE)
g +geom_smooth(span=.5, level=.99, na.rm=TRUE)
g +geom_smooth(span=.1, level=.99, na.rm=TRUE)
g <- ggplot(tips, aes(x=total_bill, y=tip)) + geom_point( color=sex)
g <- ggplot(tips, aes(x=total_bill, y=tip)) + geom_point(aes(color=sex))
g
g <- ggplot(tips, aes(x=total_bill, y=tip, color=sex)) + geom_point()
g + geom_smooth(method="lm", level=.95, na.rm=TRUE)
g <- ggplot(tips, aes(x=total_bill, y=tip)) + geom_point()
g
g + geom_smooth()
g + geom_smooth(span=.1, level=.99, na.rm=TRUE)
g + geom_smooth(method="lm", level=.95, na.rm=TRUE)
ggplot(tips, aes(x=total_bill, y=tip, color=sex)) + geom_point() + geom_smooth(method="lm", level=.95, na.rm=TRUE)
ggplot(tips, aes(x=total_bill, y=tip) + geom_point(aes(color=sex))) + geom_smooth(method="lm", level=.95, na.rm=TRUE)
ggplot(tips, aes(x=total_bill, y=tip) + geom_point(aes(color=sex)) + geom_smooth(method="lm", level=.95, na.rm=TRUE)
`
ggplot(tips, aes(x=total_bill, y=tip)) + geom_point(aes(color=sex)) + geom_smooth(method="lm", level=.95, na.rm=TRUE)
tips
ggplot(tips, aes(x=time, y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=time, y=day)) + geom_boxplot()
ggplot(tips, aes(x=day, y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=day*time, y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=day:time, y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=day+time, y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=c(day,time), y=total_bill)) + geom_boxplot()
ggplot(tips, aes(x=day:time, y=total_bill)) + geom_boxplot()
tips
ggplot(tips, aes(x=day:time, y=total_bill)) + geom_boxplot() +facet_wrap(~size)
ggplot(tips, aes(x=day:time, y=total_bill)) + geom_boxplot() +facet_wrap(~sex)
g.2 + facet_wrap(~sex)
g.2 <- ggplot(tips, aes(x=day:time, y=total_bill)) + geom_boxplot()
g.2 + facet_wrap(~sex)
tips
daily_totals <- tips %>% group_by(day)
%>% summarise(daily_total = sum(total_bill+tip))
daily_totals <- tips %>% group_by(day) %>% summarise(daily_total = sum(total_bill+tip))
daily_totals <- tips %>% group_by(day)
%>% summarise(daily_total = sum(total_bill+tip))
daily_totals <- tips %>%
group_by(day) %>%
summarise(daily_total = sum(total_bill+tip))
daily_totals
daily_totals <- tips %>%
group_by(day, sex) %>%
summarise(daily_total = sum(total_bill+tip))
daily_totals
ggplot(daily_totals, aes(x=day, y=daily_total, color=sex)) + geom_bar(stat="identity")
ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex)) + geom_bar(stat="identity")
g.3 + geom_bar(stat="identity", type="dodged")
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex))
g.3 + geom_bar(stat="identity", type="dodged")
?geom_bar
g.3 + geom_bar(stat="identity", position="dodged")
g.3 + geom_bar(stat="identity", position="dodge")
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex, color=tip))
g.3 + geom_bar(stat="identity")
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex))
g.3 + geom_bar(stat="identity")
g.3 + geom_bar(stat="identity", position="dodge")
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue")
g.3 <- g.3 + geom_bar(stat="identity", position="dodge")
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue")
install.packages("scales")
install.packages("scales")
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + + scale_y_continuous(labels = dollar)
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + + scale_y_continuous(labels = dollars)
libarary(scales)
library(scales)
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + + scale_y_continuous(labels = dollars)
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + + scale_y_continuous(labels = "dollars")
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + + scale_y_continuous(labels = scales::dollars)
library(ggplot2)
?scales
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + scale_y_continuous(labels = scales::dollars)
g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + scale_y_continuous(labels = dollar)
g.3 + theme_minimal()
g.3 + theme_minimal("538")
g.3 + theme_538()
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex), theme="538")
g.3 <- g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + scale_y_continuous(labels = dollar)
g.3
?scales
g.3 + geom_bar(stat="identity")
g.3 <- g.3 + geom_bar(stat="identity", position="dodge")
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex), theme="538")
g.3 + geom_bar(stat="identity")
g.3 + theme_classic()
g.3 <- g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + scale_y_continuous(labels = dollar)
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex))
g.3 + geom_bar(stat="identity")
g.3 <- g.3 + geom_bar(stat="identity", position="dodge")
g.3 + theme_classic()
g.3 + theme_minimal()
g.3 + theme_linedraw()
g.3 + theme_classic()
g.3 + theme_linedraw()
g.3 + theme_minimal()
g.3 + theme_minimal()
g.3 + theme_classic()
g.3 + theme_linedraw()
g.3
g.3 + scale_color_manual(c("#D4A190", "#C390D4"))
g.3 + scale_color_manual(values=c("#D4A190", "#C390D4"))
g.3 + scale_color_manual(values=c("#D4A190", "#C390D4"))
g.3 + scale_color_manual(values=c("red", "blue"))
g.3 + scale_color_discrete(values=c("#D4A190", "#C390D4"))
g.3 + scale_colour_discrete(values=c("#D4A190", "#C390D4"))
g.3 + scale_colour_manual(values=c("#D4A190", "#C390D4"))
g.3 <- g.3 + geom_bar(stat="identity", position="dodge") + scale_colour_manual(values=c("#D4A190", "#C390D4"))
g.3
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex)) + scale_colour_manual(values=c("#D4A190", "#C390D4"))
g.3 + geom_bar(stat="identity")
g.3 + scale_fill_manual(values=c("#D4A190", "#C390D4"))
g.3 <- ggplot(daily_totals, aes(x=day, y=daily_total, fill=sex))
g.3 <- g.3 + geom_bar(stat="identity", position="dodge")
g.3 <- g.3 + ggtitle("Daily Restaurant Revenue by Sex of Patron") + ylab("Total Revenue") + xlab("Day") + scale_y_continuous(labels = dollar)
g.3 + scale_fill_manual(values=c("#D4A190", "#C390D4"))
g.3 + scale_fill_manual(values=c("#D4A190", "#C390D4")) + theme_classic()
g.3 + scale_fill_manual(values=c("#D4A190", "#A1D490")) + theme_classic()
summary(model3)
coefs <- model3$coefficients
coefs
list(attributes(model3))
model3$effects
list(attributes(model3))
vcov(model3)
diag(vcov(model3))
model3$se
model3$standard.errors
?lm
sqrt(diag(vcov(model3)))
summary(model3)
lower_CI <- coefs - 1.96*std.errors
std.errors <- sqrt(diag(vcov(model3)))
lower_CI <- coefs - 1.96*std.errors
lower_CI
upper_CI <- coefs + 1.96*std.errors
upper_CI
install.packages("effects")
library(effects)
effects(model4)
effects(model3)
plot(effects(model3))
?effects
plot(allEffects(model3))
plot(allEffects(model1))
plot(allEffects(model2))
?effects
list(attribute(model3))
list(attributes(model3))
model3$terms
model3$terms[1]
model3$terms[[1]]
list(attributes(model3))
model3$model
list(attributes(model3))
model3$names
model3$[2]
model3[2]
list(attributes(model3))
model3$names
model3$call
model3$terms
model3$terms[1]
model3$terms[[2]]
model3$terms[[3]]
model3$terms[[4]]
model3$terms[1]
model3$terms[2]
model3$terms[3]
model3$terms[[1]]
model3$terms[[2]]
model3$terms[[1]]
model3$terms[1][1]
model3$terms[1][2]
names(coef)
names(coefs)
model3_effects <- cbind(names(coefs),coefs, lower_CI, upper_CI)
model3_effects
model3_effects <- cbind(vars=names(coefs),coefs, lower_CI, upper_CI)
model3_effects
ggplot(model3_effects, aes(y=vars, x=coefs)) +geom_dotplot()
model3_effects <- as.data.frame(cbind(vars=names(coefs),coefs, lower_CI, upper_CI))
ggplot(model3_effects, aes(y=vars, x=coefs)) +geom_dotplot()
model3_effects <- as.data.frame(cbind(vars=names(coefs),as.numeric(coefs), as.numeric(lower_CI), as.numeric(upper_CI))
)model3_effects
model3_effects <- as.data.frame(cbind(vars=names(coefs),as.numeric(coefs), as.numeric(lower_CI), as.numeric(upper_CI)))
model3_effects
ggplot(model3_effects, aes(y=vars, x=coefs)) +geom_dotplot()
model3_effects <- as.data.frame(cbind(vars=names(coefs),coefs=as.numeric(coefs), CI_lower = as.numeric(lower_CI), CI_upper=as.numeric(upper_CI)))
model3_effects
ggplot(model3_effects, aes(y=vars, x=coefs)) +geom_dotplot()
ggplot(model3_effects, aes( x=coefs)) +geom_dotplot()
ggplot(model3_effects, aes( y=coefs)) +geom_dotplot()
summary(model3_effects$coefs)
as.numeric(coefs))
as.numeric(model3_effects$coefs))
as.numeric(model3_effects$coefs)
coefs <- as.numeric(model3$coefficients)
std.errors <- sqrt(diag(vcov(model3)))
lower_CI <- coefs - 1.96*std.errors
upper_CI <- coefs + 1.96*std.errors
cbind(coefs, lower_CI)
model3_effects <- cbind(coefs, lower_CI)
summary(model3_effects$coefs)
model3_effects <-as.data.frame(cbind(coefs, lower_CI))
summary(model3_effects$coefs)
model3_effects <-as.data.frame(cbind(vars=names(coefs),coefs, lower_CI, upper_CI))
summary(model3_effects$coefs)
ggplot(model3_effects, aes( y=coefs)) +geom_dotplot()
ggplot(model3_effects, aes( x=coefs, y = vars)) +geom_dotplot()
model3
model3_effects
names(model3_effects)
names(model3_effects) <- c("vars", "coefs", "lower_CI", "upper_CI")
model3_effects <-as.data.frame(cbind(var_names,coefs, lower_CI, upper_CI))
var_names <- names(coefs)
model3_effects <-as.data.frame(cbind(var_names,coefs, lower_CI, upper_CI))
ggplot(model3_effects, aes( x=coefs, y = var_names)) +geom_dotplot()
model3_effects
var_names <- names(coefs)
model3_effects <- as.data.frame(cbind(var_names,coefs, lower_CI, upper_CI))
model3_effects
model3_effects <- as.data.frame(cbind(coefs, lower_CI, upper_CI))
model3_effects
ggplot(model3_effects, aes( x=coefs)) +geom_dotplot()
ggplot(model3_effects, aes( x=coefs)) +geom_bar()
model3_effects$vars <- var_names
model3_effects
var_names <- list(names(coefs))
model3_effects$vars <- var_names
model3_effects
var_names
var_names <- as.factor(names(coefs))
var_names
coefs <- as.numeric(model3$coefficients)
var_names <- as.factor(names(coefs))
var_names
var_names <- as.character(names(coefs))
var_names
names(coefs)
var_names <- names(model3$coefficients)
model3_effects <- as.data.frame(cbind(var_names, coefs, lower_CI, upper_CI))
model3_effects
ggplot(model3_effects, aes(x=coefs, y=var_names)) +geom_bar()
ggplot(model3_effects, aes(x=coefs, y=var_names)) +geom_bar(stat_count)
ggplot(model3_effects, aes(x=coefs, y=var_names)) +geom_bar(stat_count())
ggplot(model3_effects, aes(x=coefs, y=var_names)) +geom_point()
summary(model3_effects$coefs)
summary(as.numeric(model3_effects$coefs))
model3_effects <- as.data.frame(cbind(coefs, lower_CI, upper_CI))
summary(as.numeric(model3_effects$coefs))
model3_effects$vars <- var_names
summary(as.numeric(model3_effects$coefs))
ggplot(model3_effects, aes(x=coefs, y=var_names)) +geom_point()
ggplot(model3_effects, aes(x=coefs, y=var_names, xmin=lower_CI, xmax=upper_CI)) +geom_point()
ggplot(model3_effects, aes(x=coefs, y=var_names, xmin=lower_CI, xmax=upper_CI)) +geom_point() +geom_error()
ggplot(model3_effects, aes(x=coefs, y=var_names, xmin=lower_CI, xmax=upper_CI)) +geom_point() +geom_errorbar()
ggplot(model3_effects, aes(x=coefs, y=var_names, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
ggplot(model3_effects, aes(y=coefs, c=var_names, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
ggplot(model3_effects, aes(y=coefs, x=var_names, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
ggplot(model3_effects, aes(y=coefs, x=var_names, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0)
model3_effects
model3_effects <- filter(vars!="(Intercept)")
model3_effects <- filter(model3_effects,vars!="(Intercept)")
ggplot(model3_effects, aes(y=coefs, x=var_names, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0)
model3_effects
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0)
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
lower_CI <- coefs - 3.29*std.errors
upper_CI <- coefs + 3.29*std.errors
var_names <- names(model3$coefficients)
model3_effects <- as.data.frame(cbind(coefs, lower_CI, upper_CI))
model3_effects <- filter(model3_effects,vars!="(Intercept)")
model3_effects
model3_effects$vars <- var_names
model3_effects <- filter(model3_effects,vars!="(Intercept)")
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
qnorm(1 - .9999/2)
qnorm(1 - .0001/2)
qnorm(1 - .00001/2)
qnorm(1 - .0000001/2)
Zscore <- qnorm(1 - .0000001/2)
lower_CI <- coefs - Zscore*std.errors
upper_CI <- coefs + Zscore*std.errors
upper_CI <- coefs + Zscore*std.errors
var_names <- names(model3$coefficients)
model3_effects <- as.data.frame(cbind(coefs, lower_CI, upper_CI))
model3_effects$vars <- var_names
model3_effects <- filter(model3_effects,vars!="(Intercept)")
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar()
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar() +coord_flip()
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0) +coord_flip()
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0) +coord_flip() + xlab("Effect Size")
ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0) + ylab("Effect Size") + xlab("Coefficient")
g.4 <- ggplot(model3_effects, aes(y=coefs, x=vars, ymin=lower_CI, ymax=upper_CI)) +geom_point() +geom_errorbar(width=0) + ylab("Effect Size") + xlab("Coefficient")
g.4
g.4 + +coord_flip()
g.4 +coord_flip()
g.4 +coord_flip() + ggtitle("Marginal Effects for Model3") +theme_light()
(g.4 <- coord_flip() + ggtitle("Marginal Effects for Model3") +theme_light())
(g.4 <- g.4+coord_flip() + ggtitle("Marginal Effects for Model3") +theme_light())
g.4 + + geom_vline(xintercept = 0, color="red")
g.4 +  geom_vline(xintercept = 0, color="red")
g.4 +  geom_hline(yintercept = 0, color="red")
dat <- data.frame(Ft = c(1, 6, 11, 16, 21, 2, 7, 12, 17, 22, 3, 8,
13, 18, 23, 4, 9, 14, 19, 5, 10, 15, 20),
Temp = c(66, 72, 70, 75, 75, 70, 73, 78, 70, 76, 69, 70,
67, 81, 58, 68, 57, 53, 76, 67, 63, 67, 79),
TD = c(0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,
0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0))
dat
model5 <- glm(TD ~ Temp, data=dat, family=binomial(link="logit"))
temp.data <- data.frame(Temp = seq(53, 81, 0.5))
temp.data
type="link", se=TRUE))
type="response", se=TRUE))
?predict
predicted.data <- as.data.frame(predict(model, newdata = temp.data, type="response", se=TRUE))
predicted.data <- as.data.frame(predict(model5, newdata = temp.data, type="response", se=TRUE))
predicted.data
predicted.data2 <- as.data.frame(predict(model5, newdata = temp.data, type="link", se=TRUE))
predicted.data2
new.data <- cbind(temp.data, predicted.data)
new.data$ymin <- (new.data$fit - std * new.data$se)
new.data$ymax <- (new.data$fit + std * new.data$se)
Zscore <- qnorm(1 - .0000001/2)
Zscore
Zscore <- qnorm(1 - .05/2)
Zscore
std <- qnorm(0.95 / 2 + 0.5)
std
Zscore <- qnorm(1 - .05/2)
Zscore
new.data$ymin <- (new.data$fit - Zscore * new.data$se)
new.data$ymax <- (new.data$fit + Zscore * new.data$se)
p <- ggplot(mydata, aes(x=Temp, y=TD))
p + geom_point() +
geom_ribbon(data=new.data, aes(y=fit, ymin=ymin, ymax=ymax), alpha=0.5) +
geom_line(data=new.data, aes(y=fit)) +
labs(x="Temperature", y="Thermal Distress")
p <- ggplot(mydata, aes(x=Temp, y=TD))
p <- ggplot(dat, aes(x=Temp, y=TD))
p + geom_point() +
geom_ribbon(data=new.data, aes(y=fit, ymin=ymin, ymax=ymax), alpha=0.5) +
geom_line(data=new.data, aes(y=fit)) +
labs(x="Temperature", y="Thermal Distress")
plot(allEffects(model5))
?"effects"
?plot.eff
plot(allEffects(model5), type="response")
plot(allEffects(model3), type="response")
plot(allEffects(model1), type="response")
